{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "finnish-cross",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import random"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "vulnerable-stuff",
   "metadata": {},
   "source": [
    "# 17.Ð±"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "blessed-documentary",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[3. 2. 3.]\n",
      " [3. 1. 0.]\n",
      " [2. 4. 2.]]\n"
     ]
    }
   ],
   "source": [
    "a = np.zeros((3,3))\n",
    "for i in range(0,3):\n",
    "    for j in range(0,3):\n",
    "        a[i,j] = random.randint(0,5)\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "familiar-redhead",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.0\n"
     ]
    }
   ],
   "source": [
    "max=0\n",
    "for i in range(0,3):\n",
    "    for j in range(0,3):\n",
    "        if a[i,j]>max:\n",
    "            max=a[i,j]\n",
    "print(max)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "infrared-reviewer",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n",
      "3.0\n",
      "4.0\n"
     ]
    }
   ],
   "source": [
    "max_ryadok=0\n",
    "for i in range(0,3):\n",
    "    for j in range(0,3):\n",
    "        if a[i,j]>max_ryadok:\n",
    "            max_ryadok=a[i,j]\n",
    "    print(max_ryadok)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "offensive-district",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n",
      "4.0\n",
      "4.0\n"
     ]
    }
   ],
   "source": [
    "max_stolbik=0\n",
    "for j in range(0,3):\n",
    "    for i in range(0,3):\n",
    "        if a[i,j]>max_stolbik:\n",
    "            max_stolbik=a[i,j]\n",
    "    print(max_stolbik)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "revolutionary-dimension",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(a.max())\n",
    "print(a.max(axis=0))\n",
    "print(a.max(axis=1)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
